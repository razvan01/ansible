input {
  file {
    path => "/var/log/directory/directory-servlet.log"
    type => "log4j"
    tags => "directory"
  }
}

filter {
  if [type] == "log4j" {
    multiline {
      pattern => "^%{TIMESTAMP_ISO8601}"
      negate => true
      what => "previous"
    }

    grok {
      match => [
        # stack traces
        "message", "(?m)%{TIMESTAMP_ISO8601:timestamp} %{SYSLOG5424SD:thread} %{LOGLEVEL:severity}\s+%{JAVACLASS:class} - %{DATA:log_message}\n(?<exception>%{JAVACLASS:exception_class}: %{DATA:exception_message}\n\s+at %{DATA:exception_origin}\n%{GREEDYDATA})",
        # catch all
        "message", "(?m)%{TIMESTAMP_ISO8601:timestamp} %{SYSLOG5424SD:thread} %{LOGLEVEL:severity}\s+%{JAVACLASS:class} - %{GREEDYDATA:log_message}",
        # broken classes
        "message", "(?m)%{TIMESTAMP_ISO8601:timestamp} %{SYSLOG5424SD:thread} %{LOGLEVEL:severity}\s+(?<class>(?:[a-zA-Z0-9-\[\]]+\.)+[A-Za-z0-9$_\[\]/]+) - %{GREEDYDATA:log_message}"
      ]
    }
  }

  date {
    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z", "ISO8601" ]
    remove_field => [ "timestamp" ]
  }

  if [log_message] {
    mutate {
      replace => ["message", "%{log_message}"]
      remove_field => "log_message"
    }
  }
}

output {
  elasticsearch {
    hosts => "http://elasticsearch.domainadmin.com:80"
  }
}