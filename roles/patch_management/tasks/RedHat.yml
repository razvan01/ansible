---
- name: Update all installed packages using YUM module
  ansible.builtin.yum:
    name: '*'
    state: latest
    update_cache: yes
    update_only: yes
  register: yum_update_status

- name: Remove packates not needed anymore
  ansible.builtin.yum:
    autoremove: yes

- name: Install yum-utils
  ansible.builtin.yum:
    name: yum-utils
    state: present

- name: Check if a reboot is required
  ansible.builtin.shell: needs-restarting -r
  register: reboot_required
  changed_when: false
  ignore_errors: true

- name: Server reboot needed but not approved
  ansible.builtin.debug:
    msg: "Server reboot is needed but not approved. Please approve the reboot by setting the variable patch_management_reboot_approved to true."
  when: reboot_required.rc == 1 and patch_management_reboot_approved | default('', false) | trim == ''

- name: Reboot when packages were updated
  ansible.builtin.reboot:
    msg: "Reboot initiated by Ansible"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: yum_update_status.changed and patch_management_reboot_approved | default('', false) | trim != '' and reboot_required.rc == 1

- name: Wait for the server to come back online
  ansible.builtin.wait_for_connection:
    delay: 5
    timeout: 300
    sleep: 5
  when: yum_update_status.changed and patch_management_reboot_approved | default('', false) | trim != '' and reboot_required.rc == 1
